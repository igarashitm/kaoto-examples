<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is generated by Kaoto DataMapper. Do not edit. -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="3.0" xmlns:xf="http://www.w3.org/2005/xpath-functions">
    <xsl:output method="text" indent="yes"/>
    <xsl:param name="Account"/>
    <xsl:variable name="Account-x" select="json-to-xml($Account)"/>
    <xsl:param name="Cart"/>
    <xsl:variable name="Cart-x" select="json-to-xml($Cart)"/>
    <xsl:param name="orderSequence"/>
    <xsl:variable name="mapped-xml">
        <map xmlns="http://www.w3.org/2005/xpath-functions">
            <string key="OrderId">
                <xsl:value-of select="concat($Account-x/xf:map/xf:string[@key='AccountId'], '-', $orderSequence)"/>
            </string>
            <string key="OrderPerson">
                <xsl:value-of select="concat($Account-x/xf:map/xf:string[@key='AccountId'], ' : ', $Account-x/xf:map/xf:string[@key='Name'])"/>
            </string>
            <map key="ShipTo">
                <string key="Name">
                    <xsl:value-of select="$Account-x/xf:map/xf:string[@key='Name']"/>
                </string>
                <string key="Address">
                    <xsl:value-of select="$Account-x/xf:map/xf:map[@key='Address']/xf:string[@key='Street']"/>
                </string>
                <string key="City">
                    <xsl:value-of select="$Account-x/xf:map/xf:map[@key='Address']/xf:string[@key='City']"/>
                </string>
                <string key="State">
                    <xsl:value-of select="$Account-x/xf:map/xf:map[@key='Address']/xf:string[@key='State']"/>
                </string>
                <string key="Country">
                    <xsl:value-of select="$Account-x/xf:map/xf:map[@key='Address']/xf:string[@key='Country']"/>
                </string>
            </map>
            <array key="Item">
                <xsl:for-each select="$Cart-x/xf:array/xf:map">
                    <map>
                        <string key="Title">
                            <xsl:value-of select="xf:string[@key='Title']"/>
                        </string>
                        <number key="Quantity">
                            <xsl:value-of select="xf:number[@key='Quantity']"/>
                        </number>
                        <number key="Price">
                            <xsl:value-of select="xf:number[@key='Price']"/>
                        </number>
                    </map>
                </xsl:for-each>
            </array>
        </map>
    </xsl:variable>
    <xsl:template match="/">
        <xsl:value-of select="xml-to-json($mapped-xml)"/>
    </xsl:template>
</xsl:stylesheet>