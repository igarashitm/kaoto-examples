<?xml version="1.0" encoding="UTF-8"?>
<!-- This file is generated by Kaoto DataMapper. Do not edit. -->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="3.0" xmlns:xf="http://www.w3.org/2005/xpath-functions">
    <xsl:output method="xml" indent="yes"/>
    <xsl:param name="OrderSequence"/>
    <xsl:param name="Account"/>
    <xsl:variable name="Account-x" select="json-to-xml($Account)"/>
    <xsl:param name="Cart"/>
    <xsl:variable name="Cart-x" select="json-to-xml($Cart)"/>
    <xsl:template match="/">
        <ShipOrder xmlns="kaoto">
            <xsl:attribute name="OrderId">
                <xsl:value-of select="concat($Account-x/xf:map/xf:string[@key='AccountId'], '-', $OrderSequence)"/>
            </xsl:attribute>
            <xsl:choose>
                <xsl:when test="$Account-x/xf:map/xf:string[@key='Name'] != ''">
                    <OrderPerson>
                        <xsl:value-of select="$Account-x/xf:map/xf:string[@key='Name']"/>
                    </OrderPerson>
                </xsl:when>
                <xsl:otherwise>
                    <OrderPerson>
                        <xsl:value-of select="$Account-x/xf:map/xf:string[@key='AccountId']"/>
                    </OrderPerson>
                </xsl:otherwise>
            </xsl:choose>
            <ShipTo xmlns="">
                <xsl:choose>
                    <xsl:when test="$Account-x/xf:map/xf:string[@key='Name'] != ''">
                        <Name>
                            <xsl:value-of select="$Account-x/xf:map/xf:string[@key='Name']"/>
                        </Name>
                    </xsl:when>
                    <xsl:otherwise>
                        <Name>
                            <xsl:value-of select="'Customer'"/>
                        </Name>
                    </xsl:otherwise>
                </xsl:choose>
                <Address>
                    <xsl:value-of select="$Account-x/xf:map/xf:map[@key='Address']/xf:string[@key='Street']"/>
                </Address>
                <City>
                    <xsl:value-of select="$Account-x/xf:map/xf:map[@key='Address']/xf:string[@key='City']"/>
                </City>
                <State>
                    <xsl:value-of select="$Account-x/xf:map/xf:map[@key='Address']/xf:string[@key='State']"/>
                </State>
                <Country>
                    <xsl:value-of select="$Account-x/xf:map/xf:map[@key='Address']/xf:string[@key='Country']"/>
                </Country>
            </ShipTo>
            <xsl:for-each select="$Cart-x/xf:array/xf:map">
                <Item xmlns="">
                    <Title>
                        <xsl:value-of select="xf:string[@key='Title']"/>
                    </Title>
                    <Quantity>
                        <xsl:value-of select="xf:number[@key='Quantity']"/>
                    </Quantity>
                    <Price>
                        <xsl:value-of select="xf:number[@key='Price']"/>
                    </Price>
                </Item>
            </xsl:for-each>
        </ShipOrder>
    </xsl:template>
</xsl:stylesheet>